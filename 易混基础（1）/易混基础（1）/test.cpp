（1）char a = 101;int sum = 200;a += 27; sum += a;printf("%d\n", sum);输出结果：72（2）int value = 1024;char condition = *((char*)(&value));if (condition) value += 1; condition = *((char*)(&value));if (condition) value += 1; condition = *((char*)(&value));printf("%d %d", value, condition);输出结果：1024 0（3）void func(char para[100]){	void* p = malloc(100);	printf("%d, %d\n", sizeof(para), sizeof(p));}假设在32位机器上，输出结果为：4,4（4）#include <stdio.h>void func(char *p) { p = p + 1; }int main(){	char s[] = { '1', '2', '3', '4' };	func(s);	printf("%c", *s);	return 0;}输出结果：1（5）#include <stdio.h>void fun(char** p){	int i;	for (i = 0; i < 4; i++)		printf("%s", p[i]);} int main(){	char* s[6] = { "ABCD", "EFGH", "IJKL", "MNOP", "QRST", "UVWX" };	fun(s);	printf("\n");	return 0;}输出结果：ABCDEFGHIJKLMNOP（6）int main(){	int* k[10][30];	printf("%d\n", sizeof(k));	return 0;}64位操作系统上，返回结果：2400（7）void f(int** p);int a[4] = { 1,2,3,4 };int b[3][4] = { {1,2,3,4},{5,6,7,8},{9,10,11,12} };int* q[3] = { b[0],b[1],b[2] };调用合法的是：CA.f(a);     B.f(b);     C.f(q);     D.f(&a);（8）#include<stdio.h>int main(){	static char* s[] = { "black", "white", "pink", "violet" };	char** ptr[] = { s + 3, s + 2, s + 1, s }, *** p;	p = ptr;	++p;	printf("%s", **p + 1);	return 0;}输出结果：ink（9）有如下程序段，则对函数 fun 的调用语句正确的是【多选】（BCD）char fun(char*);int main(){	char* s = "one", a[5] = { 0 }, (*f1)(char*) = fun, ch;	return 0;}A: *f1(&a);      B: f1(*s);      C: f1(&ch);     D: ch = (*f1)(s);（10）#include <stdio.h>int main(){	char* str[3] = { "stra", "strb", "strc" };	char* p = str[0];	int i = 0;	while (i < 3)	{		printf("%s ", p++);		i++;	} 	return 0;}输出结果：CA: stra strb strc    B : s t r    C : stra tra ra    D : s s s